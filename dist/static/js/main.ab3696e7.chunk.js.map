{"version":3,"sources":["component/layout/SignedInLinks.js","store/actions/authActions.js","component/layout/SignedOutLinks.js","component/layout/Navbar.js","component/dashboard/Notifications.js","component/projects/ProjectSummary.js","component/projects/ProjectList.js","component/dashboard/Dashboard.js","component/projects/ProjectDetails.js","component/auth/SignIn.js","component/auth/SignUp.js","component/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","reducer/authReducer.js","reducer/projectReducer.js","reducer/rootReducer.js","config/fbconfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","catch","props","className","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","uid","links","class","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","cols","rows","fireStore","authorId","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","useFirestoreForProfile","userProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ab3696e7.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signOut } from '../../store/actions/authActions';\n\nconst SignedInLinks = (props) => {\n    return(\n            <ul className=\"right\">\n                <li>\n                    <NavLink to='/createProject'>New Project</NavLink>\n                </li>\n                <li>\n                    <a onClick={props.signOut}>Log out</a>\n                </li>\n                <li>\n                    <NavLink to='/' className=\"btn btn-floating blue lighten-1\">\n                        {props.profile.initials}\n                    </NavLink>\n                </li>\n            </ul>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        signOut: () => dispatch(signOut())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) =>{\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch({ type: 'LOGIN_SUCCESS' });\n        }).catch((err) => {\n            dispatch({ type: 'LOGIN_ERROR', err });\n        })\n    } \n}\n\nexport const signOut = () => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signOut().then(() => {\n            dispatch({ type: 'SIGNOUT_SUCCESS'})\n        }).catch(() => {\n\n        })\n    }\n}\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((resp) => {\n            return firestore.collection('users').doc(resp.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initials: newUser.firstName[0] + newUser.lastName[0]\n            })\n        }).then(()=>{\n            dispatch({type:'SIGNUP_SUCCESS'})\n        })\n        .catch((err) => {\n            dispatch({type: 'SIGNUP_ERROR', err})\n        })\n    }\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst SignedOutLinks = () => {\n    return(\n            <ul className=\"right\">\n                <li>\n                    <NavLink to='/signup'>Sign Up</NavLink>\n                </li>\n                <li>\n                    <NavLink to='/signin'>Log in</NavLink>\n                </li>\n            </ul>\n    )\n}\n\nexport default SignedOutLinks;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignedInLinks from './SignedInLinks';\nimport SignedOutLinks from './SignedOutLinks';\nimport { connect } from 'react-redux';\n\nconst Navbar = (props) => {\n    const { auth, profile } = props\n    console.log(auth.uid)\n    const links = auth.uid ? <SignedInLinks profile={profile}/> : <SignedOutLinks />\n    return(\n            <nav class=\"nav-wrapper grey darken-3\">\n                <div class=\"container\">\n                    <Link to='/' className=\"brand-logo\">Project Management Tool</Link>\n                    { links }\n                </div>\n            </nav>\n    )\n}\n\nconst mapStateToProps = (state) =>{\n    console.log(state)\n    return{\n        auth : state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\n\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\nimport moment from 'moment';\n\nconst Notifications = (props) => {\n    const { notifications } = props;\n    return(\n        <div className=\"section\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">\n                        Notifications\n                    </span>\n                    <ul className=\"notifications\">\n                        { notifications && notifications.map(item =>{\n                            return (\n                                <li key={item.id}>\n                                    <span className=\"blue-text\">\n                                        {item.user} {item.content}\n                                    </span>\n                                    <div className=\"grey-text note-date\">\n                                        {moment(item.time.toDate()).fromNow()}\n                                    </div>\n                                </li>\n                            )\n                        })}\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Notifications;","import React from 'react';\nimport moment from 'moment';\n\nconst ProjectSummary = ({project}) => {\n    return (\n        <div className=\"card z-depth-0 project-summary\">\n            <div className=\"card-content grey-text text-darken-3\">\n                <span className=\"card-title\">\n                    {project.title}\n            </span>\n                <p> Posted by {project.authorFirstName} {project.authorLastName} </p>\n                <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default ProjectSummary;","import React from 'react';\nimport ProjectSummary from './ProjectSummary';\nimport { Link } from 'react-router-dom';\n\nconst ProjectList = ({projects}) => {\n    return(\n        <div className=\"project-list section\">\n            {projects && projects.map(project => {\n                return (\n                <Link to={'/project/'+ project.id} key={project.id}>\n                <ProjectSummary project={project}/>\n                </Link> )\n            })}\n        </div>\n    )\n}\n\nexport default ProjectList;","import React, { Component } from 'react';\nimport Notifications from './Notifications';\nimport ProjectList from '../projects/ProjectList';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\n\nclass Dashboard extends Component {\n    render() { \n        const { projects, auth, notifications } = this.props;\n        if(! auth.uid){\n            return(\n                <Redirect to={'/signin'} />\n            )\n        }\n        return (\n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                    <div className=\"col s12 m6\">\n                        <ProjectList projects={projects}/>\n                    </div>\n                    <div className=\"col s12 m5 offset-1\">\n                        <Notifications notifications={notifications}/>\n                    </div>\n                </div>\n            </div>\n          );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    console.log(state)\n    return{\n        projects: state.firestore.ordered.projects,\n        auth: state.firebase.auth,\n        notifications: state.firestore.ordered.notifications\n    }\n}\n \nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        {collection: 'projects', orderBy: ['createdAt', 'desc']},\n        {collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\n    ])\n    )(Dashboard);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport moment from 'moment';\n\nconst ProjectDetails = (props) => {\n    const { project, auth } = props;\n    if (!auth.uid) {\n        return (\n            <Redirect to={'/signin'} />\n        )\n    }\n    if (project) {\n        return (\n            <div className=\"container section project-details\">\n                <div className=\"card z-depth-0\">\n                    <div className=\"card-content\">\n                        <span className=\"card-title\">\n                            {project.title}\n                        </span>\n                        <p>{project.content} </p>\n                    </div>\n                    <div className=\"card-action grey lighten-4 grey-text\">\n                        <div>\n                            Posted by {project.authorFirstName} {project.authorLastName}\n                        </div>\n                        <div>\n                            {moment(project.createdAt.toDate()).calendar()}\n                    </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    else {\n        return (\n            <div className=\"container center\">\n                <p>Loading in progress .....</p>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const id = ownProps.match.params.id;\n    const projects = state.firestore.data.projects;\n    const project = projects ? projects[id] : null;\n    return {\n        project: project,\n        auth: state.firebase.auth\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([{\n        collection: 'projects'\n    }])\n)(ProjectDetails);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { signIn } from '../../store/actions/authActions';\nimport { Redirect } from 'react-router-dom';\n\nclass SignIn extends Component {\n    state = {\n        email : '',\n        password: ''\n      }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id] : e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signIn(this.state);\n    }\n\n    render() { \n        const { authError, auth } = this.props\n        if (auth.uid) {\n            return (\n                <Redirect to={'/'} />\n            )\n        }\n        return ( \n            <div className=\"container\">\n                <form className=\"white\" onSubmit={this.handleSubmit}>\n                    <h5 className=\"grey-text text-darken-3\">\n                        Sign In\n                    </h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">E-mail</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <button class=\"btn blue lighten-1 z-depth-0\">\n                            Login\n                        </button>\n                        <div className=\"red-text center\">\n                            { authError ? <p>{authError}</p> : null}\n                        </div>\n                    </div>\n                </form>\n\n            </div>\n         );\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        signIn : (creds) => dispatch(signIn(creds))\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        authError : state.auth.authError,\n        auth : state.firebase.auth\n    }\n}\n \nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signUp } from '../../store/actions/authActions';\n\nclass SignUp extends Component {\n    state = {\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: ''\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signUp(this.state)\n    }\n\n    render() {\n        const { auth, authError } = this.props\n        if (auth.uid) {\n            return (\n                <Redirect to={'/'} />\n            )\n        }\n        return (\n            <div className=\"container\">\n                <form className=\"white\" onSubmit={this.handleSubmit}>\n                    <h5 className=\"grey-text text-darken-3\">\n                        Sign In\n                    </h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">E-mail</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"text\">First Name</label>\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"text\">Last Name</label>\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <button class=\"btn blue lighten-1 z-depth-0\">\n                            Sign Up\n                        </button>\n                        <div className=\"red-text center\">\n                            {authError ? <p>{authError}</p> : null}\n                        </div>\n                    </div>\n                </form>\n\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (newUser) => dispatch(signUp(newUser))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React, { Component } from 'react';\nimport { createProject } from '../../store/actions/projectActions';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nclass CreateProject extends Component {\n    state = {\n        title: '',\n        content: ''\n      }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id] : e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.createProject(this.state)\n        this.props.history.push('/')\n    }\n\n    render() { \n        const { auth } = this.props;\n        if(! auth.uid){\n            return(\n                <Redirect to={'/signin'} />\n            )\n        }\n        return ( \n            <div className=\"container\">\n                <form className=\"white\" onSubmit={this.handleSubmit}>\n                    <h5 className=\"grey-text text-darken-3\">\n                        Create New project\n                    </h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"text\">Project Title</label>\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"text\">Project Details</label>\n                        <textarea className=\"materialize-textarea\" cols=\"30\" rows=\"10\" id=\"content\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <button class=\"btn blue lighten-1 z-depth-0\">\n                            Create Project\n                        </button>\n                    </div>\n                </form>\n\n            </div>\n         );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return{\n        auth : state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createProject : (project) => dispatch(createProject(project))\n    }\n}\n \nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);","export const createProject = (project) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const fireStore = getFirestore();\n        const profile = getState().firebase.profile;\n        const authorId = getState().firebase.auth.uid;\n        fireStore.collection('projects').add({\n            ...project,\n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorId,\n            createdAt: new Date()\n        }).then(()=>{\n            dispatch({type:'CREATE_PROJECT', project})\n        }).catch((err)=>{\n            dispatch({type:'CREATE_PROJECT_ERROR',err})\n        })\n    }\n};\n\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './component/layout/Navbar';\nimport Dashboard from './component/dashboard/Dashboard';\nimport ProjectDetails from './component/projects/ProjectDetails';\nimport SignIn from './component/auth/SignIn';\nimport SignUp from './component/auth/SignUp';\nimport CreateProject from './component/projects/CreateProject';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <div className=\"App\">\n      <Navbar />\n      <Switch>\n        <Route exact path='/' component={Dashboard} />\n        <Route exact path='/project/:id' component={ProjectDetails} />\n        <Route exact path='/signin' component={SignIn} />\n        <Route exact path='/signup' component={SignUp} />\n        <Route exact path='/createProject' component={CreateProject} />\n      </Switch>\n    </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {};\nconst authReducer = (state = initState, action) => {\n    switch(action.type){\n        case 'LOGIN_ERROR':\n            console.log('error')\n            return {\n                ...state,\n                authError: 'Login failed'\n            }\n        case 'LOGIN_SUCCESS':\n            console.log('success')\n            return{\n                ...state,\n                authError: null\n            }\n        case 'SIGNOUT_SUCCESS':\n            console.log('signout')\n            return state;\n        case 'SIGNUP_SUCCESS':\n            console.log('signup success')\n            return{\n                ...state,\n                authError: null\n            }\n        case 'SIGNUP_ERROR':\n            console.log('signup error')\n            return{\n                ...state,\n                authError: action.err.message\n            }\n        default:\n            return state;\n    }\n}\n\n\nexport default authReducer;","const initState = {\n    projects: [\n        {id: '1', title: 'Project 1', content: 'Project Details 1'},\n        {id: '2', title: 'Project 2', content: 'Project Details 2'},\n        {id: '3', title: 'Project 3', content: 'Project Details 3'},\n        {id: '4', title: 'Project 4', content: 'Project Details 4'},\n    ]\n};\nconst projectReducer = (state = initState, action) => {\n    switch(action.type){\n        case 'CREATE_PROJECT':\n            console.log('Project created 123', action.project);\n            return state;\n        case 'CREATE_PROJECT_ERROR':\n            console.log('Error in creating project', action.err);\n            return state;\n        default:\n            return state;\n    }\n}\n\n\nexport default projectReducer;","import authReducer from './authReducer';\nimport projectReducer from './projectReducer';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\n\nconst rootReducer = combineReducers({\n    auth : authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n})\n\nexport default rootReducer;\n","import firebase from 'firebase/app';\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nvar config = { \n    apiKey: \"AIzaSyCC_0FDyXWR4-0er-i3JDKB0FXk4Y7ZZcs\",\n    authDomain: \"project-management-tool-38651.firebaseapp.com\",\n    databaseURL: \"https://project-management-tool-38651.firebaseio.com\",\n    projectId: \"project-management-tool-38651\",\n    storageBucket: \"project-management-tool-38651.appspot.com\",\n    messagingSenderId: \"345764564358\",\n    appId: \"1:345764564358:web:07f6a50bd8a8e400d0b007\",\n    measurementId: \"G-9DTZZ3V7BE\" \n}; \n// Initialize Firebase \nfirebase.initializeApp(config);\nfirebase.firestore().settings({timestampsInSnapshots: true});\n\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './reducer/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbconfig';\n\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reactReduxFirebase(fbConfig, { useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true }),\n    reduxFirestore(fbConfig)\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: https://bit.ly/CRA-PWA\n  serviceWorker.unregister();\n})\n"],"sourceRoot":""}